name: Deploy to VPS

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          # Debug: vérifier le format de la clé
          echo "--- Checking SSH key format ---"
          head -1 ~/.ssh/id_ed25519
          tail -1 ~/.ssh/id_ed25519
          # Essayer aussi avec RSA si ed25519 ne fonctionne pas
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Test SSH connection with ed25519
        continue-on-error: true
        run: |
          ssh -v -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "echo 'SSH ed25519 successful'"

      - name: Test SSH connection with RSA
        continue-on-error: true
        run: |
          ssh -v -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "echo 'SSH RSA successful'"

      - name: Deploy project to VPS
        run: |
          rsync -az --delete \
            -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ~/.ssh/id_ed25519" \
            . ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/home/docker/carbweb || \
          rsync -az --delete \
            -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ~/.ssh/id_rsa" \
            . ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/home/docker/carbweb

      - name: Restart Docker container
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} 'cd /home/docker/carbweb && docker-compose down && docker-compose up --build -d' || \
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} 'cd /home/docker/carbweb && docker-compose down && docker-compose up --build -d'